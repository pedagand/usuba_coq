@article{rectangle,
  author       = {Wentao Zhang and
                  Zhenzhen Bao and
                  Dongdai Lin and
                  Vincent Rijmen and
                  Bohan Yang and
                  Ingrid Verbauwhede},
  title        = {{RECTANGLE:} a bit-slice lightweight block cipher suitable for multiple
                  platforms},
  journal      = {Sci. China Inf. Sci.},
  volume       = {58},
  number       = {12},
  pages        = {1--15},
  year         = {2015},
  url          = {https://doi.org/10.1007/s11432-015-5459-7},
  doi          = {10.1007/s11432-015-5459-7},
}

@article{CompCert,
  author    = {Xavier Leroy},
  title     = {Formal verification of a realistic compiler},
  journal   = {Communications of the {ACM}},
  volume    = {52},
  number    = {7},
  year      = {2009},
  doi       = {10.1145/1538788.1538814},
}

@inproceedings{CakeML,
  author    = {Ramana Kumar and
               Magnus O. Myreen and
               Michael Norrish and
               Scott Owens},
  title     = {{CakeML}: a verified implementation of {ML}},
  booktitle = {Principles of Programming Languages ({POPL})},
  publisher = {{ACM}},
  year      = {2014},
  doi       = {10.1145/2535838.2535841},
}

@inproceedings{usuba,
    author = {Mercadier, Darius and Dagand, Pierre-\'{E}variste and Lacassagne, Lionel and Muller, Gilles},
    title = {Usuba: Optimizing \& Trustworthy Bitslicing Compiler},
    year = {2018},
    isbn = {9781450356466},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3178433.3178437},
    doi = {10.1145/3178433.3178437},
    % abstract = {Bitslicing is a programming technique commonly used in cryptography that consists in implementing a combinational circuit in software. It results in a massively parallel program immune to cache-timing attacks by design.However, writing a program in bitsliced form requires extreme minutia. This paper introduces Usuba, a synchronous dataflow language producing bitsliced C code. Usuba is both a domain-specific language -- providing syntactic support for the implementation of cryptographic algorithms -- as well as a domain-specific compiler -- taking advantage of well-defined semantics invariants to perform various optimizations before handing the generated code to an (optimizing) C compiler.On the Data Encryption Standard (DES) algorithm, we show that Usuba outperforms a reference, hand-tuned implementation by 15% (using Intel's 64 bits general-purpose registers and depending on the underlying C compiler) whilst our implementation also transparently supports modern SIMD extensions (SSE, AVX, AVX-512), other architectures (ARM Neon, IBM Altivec) as well as multicore processors through an OpenMP backend.},
    booktitle = {Proceedings of the 2018 4th Workshop on Programming Models for SIMD/Vector Processing},
    articleno = {4},
    numpages = {8},
    location = {Vienna, Austria},
    series = {WPMVP'18}
}

@inproceedings{peralta,
author = {Boyar, Joan and Peralta, René},
year = {2011},
month = {01},
pages = {332},
title = {A depth-16 circuit for the AES S-box.},
volume = {2011},
isbn = {978-3-642-30435-4},
journal = {IACR Cryptology ePrint Archive},
doi = {10.1007/978-3-642-30436-1_24}
}

@article{lustre,
author = {Bourke, Timothy and Brun, Lélio and Dagand, Pierre-Évariste and Leroy, Xavier and Pouzet, Marc and Rieg, Lionel},
year = {2017},
month = {06},
pages = {586-601},
title = {A formally verified compiler for Lustre},
volume = {52},
journal = {ACM SIGPLAN Notices},
doi = {10.1145/3140587.3062358}
}